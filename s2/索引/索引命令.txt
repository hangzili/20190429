	建表要求[三范式]
		第一范式（1NF）是指数据库表的每一列都是不可分割的基本数据项
		第二范式（2NF）要求数据库表中的每个实例或行必须可以被唯一地区分
		第三范式（3NF）要求一个数据库表中不包含已在其它表中已包含的非主关键字信息
	反三范式：概念
		假如我们在订单表里面获取商品名字可以在订单表里面存储商品名字
1.查看表存储引擎
	mysql> show engines;
	mysql> show engines;
	+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
	| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |
	+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
	| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |
	| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |
	| MyISAM             | DEFAULT | MyISAM storage engine                                          | NO           | NO   | NO         |
	| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |
	| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |
	| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |
	| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |
	| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         | 
	+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
	8 rows in set (0.00 sec)

	存储引擎
	   myisam【物理存储】
		行级存储
	   innodb【物理存储】
		二叉树
	   memory【内存】
		hash表
	   csv【物理存储】
		行级存储
		myisam和innodb区别
			1.mysiam是我们的行级结构，innodb是我们的二叉树结构
			2.myisam不支持事物  innodb支持事物
			3.myisam不支持外键，innodb支持外键
		表文件物理存储
		标记一个表文件存储位置datadir=""来制定我的数据的存储位置
		每个mysql的库其实就是目录，每个表其实就是一个普通文件
		myisam
			xxx.MYI====表上面的索引信息
			xxx.MYD====表里面存放的数据
			xxx.FRM====表的框架信息
		innodb
			xxx.frm=======存储我们表的结构也就是框架信息
			在数据库里面所有存储的数据都会存储在ibdata1这个文件里面===表共享空间
=====================================================================================
1.sql语句运行过程
	连接器    分析器    优化器     查询器
2.mysql执行过程
	from         where       group by       order by     select
3.什么是索引，如何添加索引
4.explain作用
	查看索引
5.索引添加
	alter table tableName add index(column);
6.删除索引
	mysql> alter table t3 drop index +索引名字;
7.
	主键索引
		primary key
	普通索引
		index
	联合索引
		alter table tableName add index(column1,column2,column3);
	唯一索引
		mysql> alter table t3 add unique index(name);
	全文索引
		不讲知道有个东西
===========================================================================================
1.聚簇索引
	mysql自动生成的索引
2.索引原理
	在where条件后面 ，发现索引之后进入索引文件，索引是被优化器使用的
3.show profile
	分析sql的性能
4.索引覆盖
	进入索引之后，查询的东西在索引文件里面有，索引直接返回，不用进入原始文件。
5.mysql回表
	进入查询之后，根据索引进行查询，索引文件里面没有，然后根据id进入原始文件中进行查询。